<resources>
    <string name="app_name">ShadowsocksGOSTPlugin</string>
    <string name="string_text_title">GOST plugin</string>
    <string name="string_del_arg" translatable="false">x</string>
    <string name="confirm_del_arg_title">Delete an argument</string>
    <string name="confirm_del_arg_msg">Are you sure you want to delete this argument?</string>
    <string name="string_text_cmdargs">How it Works</string>
    <string name="string_text_desc"><i>Shadowsocks-Android</i> connects to a <i>local Shadowsocks server</i> on <b>${local.host}:${local:port}</b> which must be setup by <i>GOST</i>. This service is usually specified through the first <b>-L</b> argument. Further forwarding nodes (i.e., the <b>-F</b> arguments) and other <i>GOST</i> related command line arguments shall be specified in sequence by user through provided controls below.\nYou may refer to <b>${remote.host}</b> and <b>${remote.port}</b> in values of arguments which are be then replaced with configured <b>Server</b> and <b>Remote port</b>, respectively.\nTo avoid unnecessary performance hit, no encryption is used by default, and hence, <b>Encrypt Method</b> must be set to <b>NONE</b> for default setup in <i>Shadowsocks-Android</i> profile settings.\nPress <i>back button</i> and press <i>OK</i> to save changes. You need to restart corresponding profile for changes to take effect.</string>
    <string name="example_cmdarg1" translatable="false">-L</string>
    <string name="example_cmdarg2" translatable="false"><![CDATA[ss://none@${local.host}:${local.port}]]></string>
    <string name="example_cmdarg3" translatable="false">-F</string>
    <string name="example_cmdarg4" translatable="false"><![CDATA[wss://${remote.host}:${remote.port}?secure=true&path=/ws]]></string>
    <string name="string_add_arg" translatable="false">+</string>
    <string-array name="string_add_one_or_two_args">
        <item>Add single argument (no-value)</item>
        <item>Add valued argument</item>
    </string-array>
    <string name="string_text_file_entries">Attached files</string>
    <string name="string_text_files_reminder">The following <u>config.yaml</u> is already included. You may leave it empty or use it to fine tune <i>GOST</i> per its documentation</string>
    <string name="string_delete">Delete</string>
    <string name="confirm_del_file_title">Delete a file</string>
    <string name="confirm_del_file_msg">Are you sure you want to delete this file?\nFile name: </string>
    <string name="string_load">Load</string>
    <string name="still_reading">Still reading the previous file, please try later</string>
    <string name="err_file_too_large">Error! File is too large (larger than 1M)</string>
    <string name="example_cfgjson"># sample config, won\'t be saved or applied\nchains:\n- name: chain-0\n\thops:\n\t- name: hop-0\n\t\tnodes:\n\t\t- name: node-0\n\t\t\taddr: example.com:443\n\t\t\tconnector:\n\t\t\t\ttype: http\n\t\t\t\tmetadata:\n\t\t\t\t\tpath: /ws\n\t\t\tdialer:\n\t\t\t\ttype: wss\n\t\t\t\ttls:\n\t\t\t\t\tsecure: true\n\t\t\t\t\tserverName: example.com\n\t\t\t\tmetadata:\n\t\t\t\t\tpath: /ws\nlog:\n\tlevel: debug</string>
    <string name="example_cacert">-----BEGIN CERTIFICATE-----\n(Your own CA certificate in Base64 PEM format)\n-----END CERTIFICATE-----</string>
    <string name="example_clientcert">-----BEGIN CERTIFICATE-----\n(Your own client certificate in Base64 PEM format)\n-----END CERTIFICATE-----</string>
    <string name="example_clientcertkey">-----BEGIN RSA PRIVATE KEY-----\n(Your own client certificate key in Base64 PEM format)\n-----END RSA PRIVATE KEY-----</string>
    <string name="new_file_name_hint">new_file_name</string>
    <string name="string_add_file">Add file</string>
    <string name="err_file_name_empty">Error! File name is empty</string>
    <string name="err_file_name_contains_slash">Error! File name contains slash (/)</string>
    <string name="err_file_already_exists">Error! File already exists</string>
    <string name="empty_config">Configuration is empty</string>
    <string name="prompt_config_mig_title">Migrate to the new encoded configuration format</string>
    <string name="prompt_config_mig_msg">New encoded configuration format allows user to utilize the full <i>GOST</i> functionality without experiencing weired issues related to CLI parsing. Note that after migration to new format, old values won\'t be recoverable.</string>
    <string name="config_mig_done">Successfully migrated to new config format</string>
    <string name="config_mig_err">Error migrating to new config format</string>
    <string name="loaded_encoded_config">Loaded configuration</string>
    <string name="err_loading_encoded_config">Error loading configuration</string>
    <string name="saved_encoded_config">Configuration saved</string>
    <string name="error_saving_encoded_config">Error saving configuration</string>
    <string name="ok">OK</string>
    <string name="discard_changes">Discard Changes</string>
    <string name="cancel">Cancel</string>
    <string name="confirm_save_apply_title">Save and apply configuration?</string>
    <string name="confirm_save_apply_msg">Press back button again to continue editing.</string>
    <string name="cancelled">Cancelled</string>
    <string name="string_text_dns_server">DNS server</string>
    <string name="string_dns_server_desc">Currently, <i>GOST</i> uses its own name resolution mechanism and won\'t use the system DNS settings. Specify the desired DNS as <i>119.29.29.29:53</i>.</string>
    <string name="example_dns_server" translatable="false">8.8.8.8:53</string>
    <string name="cfg_key_remote_host" translatable="false">remote.host</string>
    <string name="cfg_key_remote_port" translatable="false">remote.port</string>
    <string name="cfg_key_local_host" translatable="false">local.host</string>
    <string name="cfg_key_local_port" translatable="false">local.port</string>
    <string name="cfg_po_encoded" translatable="false">encoded</string>
</resources>
