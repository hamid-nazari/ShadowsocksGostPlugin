import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'com.android.application'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdk 29
    namespace "com.github.shadowsocks.plugin.gost"
    defaultConfig {
        applicationId "${android.namespace}"
        minSdk 26
        //noinspection ExpiredTargetSdkVersion
        targetSdk 29
        versionCode 410000
        versionName "4.1.0"
        manifestPlaceholders = [pluginID: "gost"]
        setProperty("archivesBaseName", "ShadowsocksGOSTPlugin-$versionName")
    }
    signingConfigs {
        releaseConfig {
            keyAlias properties.getProperty("SignKeyName")
            keyPassword properties.getProperty("SignKeyPass")
            storePassword properties.getProperty("SignKeyPass")
            storeFile file(System.getProperty("user.home") + "/"+properties.getProperty("SignKeyStorePath"))
        }
    }
    buildTypes {

        debug {
            debuggable true
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.releaseConfig
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    android.ndkVersion "26.2.11394342"
}

dependencies {
    implementation 'com.github.shadowsocks:plugin:2.0.1'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
}

task buildGoLibrary(type: Exec) {
    if(Os.isFamily(Os.FAMILY_WINDOWS))
    {
        commandLine ('cmd')
        return
    }
    environment ([ANDROID_NDK_ROOT: android.ndkDirectory])
    commandLine ('../build.gost.sh')
    inputs.files '../build.gost.sh'
    outputs.dir 'src/main/jniLibs'
}

clean {
     delete "${project.projectDir}/src/main/jniLibs"
}

tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("preDebugBuild") || theTask.name.equals("preReleaseBuild")) {
        theTask.dependsOn "buildGoLibrary"
    }
}


